############################# Template y Description
AWSTemplateFormatVersion: 2010-09-09
Description: Creacion Ec2 para servicio sandbox

############################## Metadata

############################## Parameters
Parameters:
  # Type Environment
    pEnvironment:
      Type: String
      AllowedValues:
        - dev
        - qa
        - pdn
      Description: Enter environment dev, qa, pdn.
      Default: dev
  
  # Name Project
    pImportBase:
      Description: The base name of the imported objetcs
      Type: String
      Default: aw1205001-modernizacion-mft

  # VPC
    DefaultVPCId:
      Description: The VPC Default Project
      Type: String
      Default: vpc-070ca66092c150cc0
  
  # Subnets
    Subnets:
      Description: he list of SubnetIds, for at least two Availability Zones in the region in your Virtual Private Cloud (VPC)
      Type: CommaDelimitedList
      Default: subnet-0ba2b4e5b1fcffac7,subnet-0f2f5b594e51d0623

  # KeyPair
    myKeyPair: 
      Description: Amazon EC2 Key Pair
      Type: "AWS::EC2::KeyPair::KeyName"
  
  # Section Database 

  #Descritpion Database
    pDataBase:
      Description: Motor de base de datos
      Type: String
      Default: oracle
  
  #DB User Root
    pDBUsername:
      Default: orcl
      NoEcho: 'true'
      Description: The Oracle database admin account username
      Type: String
      MinLength: '1'
      MaxLength: '16'
      AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
      ConstraintDescription: "must begin with a letter and contain only alphanumeric characters."
  
  #DB Password Root
    pDBPassword:
      Default: orcl12crds
      NoEcho: 'true'
      Description: The Oracle database admin account password
      Type: String
      MinLength: '8'
      MaxLength: '41'
      AllowedPattern: "[a-zA-Z0-9]*"
      ConstraintDescription: "must contain only alphanumeric characters."
  
  #DB License
    pLicenseModel:
      Description: El modelo de licencia de la instancia de base de datos.
      Type: String
      Default: bring-your-own-license
  
  #DB Charter > VSTSS > Pipeline > librqary > New library modernizacion AW102%% >  Variable group
    pCharacterSetName: #rds-character-set
      Description: Character set of the RDS.
      Type: String
      Default: AL32UTF8

  # KMS 
  
############################## Mappings  
Mappings:

  # EC2
    mSterling:
      dev: 
        InstanceType: "t2.micro"          
        ImageId: "ami-0b0af3577fe5e3532" #Red Hat Enterprise Linux 8 
        EbsVolumeSize: 10
        EbsVolumeSize2: 10
        DisableApiTermination: "false"
        Subnet1: "subnet-03537d0e8b9cfae20" #mft-public-A 1
        Subnet2: "subnet-0ba2b4e5b1fcffac7" #mft-public-B 1
        Subnet3: "subnet-026692b4101281cd8" #mft-private-A 2
        Subnet4: "subnet-0f2f5b594e51d0623" #mft-private-B 2

  # Database 
    oracle:
      dev: 
        BackupRetentionPeriod: 8
        Engine: "oracle-ee"
        EngineVersion: "19.0.0.0.ru-2021-01.rur-2021-01.r2"
        instanceClass: "db.m5.large"
        MultiAZ: false              
        port: "50423"
        PreferredMaintenanceWindow: Sun:07:00-Sun:09:00
        PreferredBackupWindow: "05:00-06:00"
        Daticaluser: "CNXDATID"
        EnableCloudwatchLogsExports:
          - trace
          - audit
          - alert
          - listener
        allocatedStorage: 100
        maxAllocatedStorage: 300 
        storageType: "gp2"
        #AWSKeyManagementServicePowerUser: 
        ##  - arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser
        #  - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        DBName: MFTDDB

############################## Conditions
Conditions:
  envNoDev: !Not [ !Equals [Ref: pEnvironment, "dev"]] 

############################## Resources  
Resources:

    ############################################################################################################
    # Segmento Publico
    ############################################################################################################

      ############################################################################################################
      # Segmento Publico A
      #################################### EC2

        # Security Groups
          rSecurityGroupEc2PublicA: 
            Type: AWS::EC2::SecurityGroup
            Properties:
              GroupName: !Join ["",[!Ref 'AWS::StackName', "-sg-public-A"]] 
              GroupDescription: security group para el EC2 A
              SecurityGroupIngress:  
                - IpProtocol: "-1"
                  CidrIp: 0.0.0.0/0
                  Description: Allow access to the EC2 APP from Public A
              VpcId: !Ref DefaultVPCId
              Tags:
                - Key: Name
                  Value: !Join ["",[!Ref 'AWS::StackName', "-sg-public-A"]]

        # Instancia Perimeter
          rEc2PSNodo1:
            Type: AWS::EC2::Instance
            # Condition: envNoDev  # >> depende del ambiente
            Properties:
              DisableApiTermination: !FindInMap [mSterling, !Ref pEnvironment, DisableApiTermination]
              SecurityGroupIds:
                - !Ref rSecurityGroupEc2PublicA
              SubnetId: !FindInMap [mSterling, !Ref pEnvironment, Subnet1]  # >> Pilas Subnet 1
              Monitoring: True
              InstanceType: !FindInMap [mSterling, !Ref pEnvironment, InstanceType]
              ImageId: !FindInMap [mSterling, !Ref pEnvironment, ImageId]
              # IamInstanceProfile: !Ref rEC2InstanceProfileSFG
              BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                    VolumeSize: !FindInMap [mSterling, !Ref pEnvironment, EbsVolumeSize]
              KeyName: !Ref myKeyPair
              Tags:
                - Key: Name
                  Value: !Join ["", [!Ref 'pImportBase',"-ec2-ps-nodo1"]]

      ############################################################################################################
      # Segmento Publico B
      #################################### EC2

        # Security Groups
          rSecurityGroupEc2PublicB: 
            Type: AWS::EC2::SecurityGroup
            Properties:
              GroupName: !Join ["",[!Ref 'AWS::StackName', "-sg-public-B"]] 
              GroupDescription: security group para el EC2 segmento B
              SecurityGroupIngress:  
                - IpProtocol: "-1"
                  CidrIp: 0.0.0.0/0
                  Description: Allow access to the EC2 APP from Public B
              VpcId: !Ref DefaultVPCId
              Tags:
                - Key: Name
                  Value: !Join ["",[!Ref 'AWS::StackName', "-sg-public-B"]]

        # Instancia Perimeter

    ############################################################################################################
    ## Segmento Privado EKS
    ############################################################################################################

      #############################################################################
      # EFS
      #############################################################################

        # Security Groups efs
          rSecurityGroupEKSEFS:
            Type: AWS::EC2::SecurityGroup
            Properties:
              GroupName: !Join ["-", [!Ref pImportBase, "-sfg-efs-eks"]]
              GroupDescription: Allow NFS to EFS
              VpcId: !Ref DefaultVPCId
              SecurityGroupIngress:
                - Description: File systema access
                  IpProtocol: tcp
                  FromPort: 2049
                  ToPort: 2049
                  CidrIp: 192.168.0.0/16
              Tags:
                - Key: Name
                  Value: !Join ["",[!Ref 'AWS::StackName', "-sfg-efs-eks"]]
            #            SourceSecurityGroupId: 
            #              Fn::Join: ['',['{{resolve:ssm:',!Sub '${pImportBase}-sfg-ec2-sgid}}']]
        
        # Resource EFS
          pFileSystemResource:
            Type: 'AWS::EFS::FileSystem'
            Properties:
              PerformanceMode: maxIO
              FileSystemTags:
                - Key: Name
                  Value: EKSFileSystem

        # Mountain Target para subnet privada 3
          MountTargetEKSResource1:
            Type: AWS::EFS::MountTarget
            Properties:
              FileSystemId: !Ref pFileSystemResource
              SubnetId: !FindInMap [mSterling, !Ref pEnvironment, Subnet3] 
              SecurityGroups: 
                - !Ref rSecurityGroupEKSEFS

        # Mountain Target para subnet privada 4
          MountTargetEKSResource2:
            Type: AWS::EFS::MountTarget
            Properties:
                FileSystemId: !Ref pFileSystemResource
                SubnetId: !FindInMap [mSterling, !Ref pEnvironment, Subnet4]
                SecurityGroups: 
                  - !Ref rSecurityGroupEKSEFS

      ############################################################################################################
      # Segmento Private A EC2
      
      # EC2

        # Security Groups EC2
          rSecurityGroupEc2Private: 
            Type: AWS::EC2::SecurityGroup
            Properties:
              GroupName: !Join ["",[!Ref 'AWS::StackName', "-sg-private"]] 
              GroupDescription: security group para el EC2
              SecurityGroupIngress:  
                - IpProtocol: tcp
                  FromPort: 22
                  ToPort: 22
                  CidrIp: 0.0.0.0/0
                  Description: Allow access to the EC2 APP from Subnet Private   
              VpcId: !Ref DefaultVPCId 
              Tags:
                - Key: Name
                  Value: !Join ["",[!Ref 'AWS::StackName', "-sg-private"]]

        # Instancia Sterling Nodo1 
          rEc2SterlingNodo1:
            Type: AWS::EC2::Instance
            Properties:
              DisableApiTermination: !FindInMap [mSterling, !Ref pEnvironment, DisableApiTermination]
              SecurityGroupIds:
                - !Ref rSecurityGroupEc2Private     
              SubnetId: !FindInMap [mSterling, !Ref pEnvironment, Subnet3]  # >> Pilas Subnet 1 
              Monitoring: True
              InstanceType: !FindInMap [mSterling, !Ref pEnvironment, InstanceType]
              ImageId: !FindInMap [mSterling, !Ref pEnvironment, ImageId]  
              BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                    VolumeSize: !FindInMap [mSterling, !Ref pEnvironment, EbsVolumeSize]
              KeyName: !Ref myKeyPair
              Tags:
                - Key: Name
                  Value: !Join ["", [!Ref 'pImportBase',"-ec2-sfg-nodo1"]]

      ############################################################################################################
      # Segmento Private B Database
      #################################### Database

        # SubnetGroup RDS
          rSubnetGroupRDS:
            Type: AWS::RDS::DBSubnetGroup
            Properties:
              DBSubnetGroupDescription: 
                Fn::Join: ["-", [Ref: 'AWS::StackName' , "subnetgroup"]]
              DBSubnetGroupName: 
                Fn::Join: ["-", [Ref: 'AWS::StackName' , "subnetgroup"]]
              SubnetIds:
                  Ref: Subnets
              Tags:
                - Key: Name
                  Value: 
                    Fn::Join: ["-", [Ref: 'AWS::StackName' , "subnetgroup"]]

        # Secuirty Group RDS 
          rDBSecurityGroupsDBA: 
            Type: AWS::EC2::SecurityGroup
            Properties:
              GroupName: !Join ["",[!Ref 'AWS::StackName', "-sg-private-DB"]] 
              GroupDescription: Grupo de securidad para la instancia de base de datos.
              SecurityGroupIngress:  
                - IpProtocol: tcp
                  FromPort: 50423
                  ToPort: 50423
                  CidrIp: 0.0.0.0/0
                  Description: Allow access to the EC2 APP from Subnet Private   
              VpcId: !Ref DefaultVPCId 
              Tags:
                - Key: Name
                  Value: !Join ["",[!Ref 'AWS::StackName', "-sg-private-DB"]]

        # Instance RDS
          rDataBases:
            Type: 'AWS::RDS::DBInstance'
            Properties:
              CopyTagsToSnapshot: true
              DBName: 
                Fn::FindInMap:
                  - Ref: pDataBase
                  - Ref: pEnvironment
                  - DBName
              DBInstanceIdentifier: 
                Fn::Join: [ "-", [Ref: pImportBase, "-sfg-rds-eks"] ]
              DBSubnetGroupName: 
                Ref: rSubnetGroupRDS
              AllowMajorVersionUpgrade: true
              VPCSecurityGroups: 
                - Ref: rDBSecurityGroupsDBA
              AllocatedStorage:
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - allocatedStorage
              MaxAllocatedStorage:
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - maxAllocatedStorage
              StorageType: 
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - storageType
              DBInstanceClass: 
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - instanceClass
              Engine: 
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - Engine
              EngineVersion: 
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - EngineVersion
              LicenseModel: 
                Ref: pLicenseModel
              Port: 
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - port
              CharacterSetName: 
                Ref: pCharacterSetName
              MultiAZ: 
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - MultiAZ 
              EnableCloudwatchLogsExports:
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - EnableCloudwatchLogsExports
              MasterUsername: !Ref 'pDBUsername'
              MasterUserPassword: !Ref 'pDBPassword'
              PreferredBackupWindow:
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - PreferredBackupWindow
              DBParameterGroupName: !Ref DBParamGroupRDS
              StorageEncrypted: true
              AutoMinorVersionUpgrade: true
              EnablePerformanceInsights: true
              PreferredMaintenanceWindow: 
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - PreferredMaintenanceWindow
              #OptionGroupName: aw1205-modernizacion-database-dev-stack-dbaoracleee19optiongroup-1a74pwr3ozt3s
              DeletionProtection: false 
              PubliclyAccessible: false
              DeleteAutomatedBackups: true
              BackupRetentionPeriod: 
                Fn::FindInMap:
                - Ref: pDataBase
                - Ref: pEnvironment
                - BackupRetentionPeriod
              Tags: 
                - Key: Name
                  Value: !Join ["", [!Ref 'pImportBase',"-sfg-rds-eks"]]

          # DB 
          DBParamGroupRDS:
            Type: AWS::RDS::DBParameterGroup
            Properties:
              Family: oracle-ee-19
              Description: Oracle DB Parameter Group
              Parameters:
                compatible: 19.0.0.0

############################## Transform

############################## Outputs
Outputs:
  MasterJDBCConnectionString:
    Description: JDBC connection string for the master database
    Value: !Join ['', ['jdbc:mysql://', !GetAtt [rDataBases, Endpoint.Address], ':',
        !GetAtt [rDataBases, Endpoint.Port], /, DBName]]